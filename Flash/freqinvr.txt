; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\freqinvr.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\freqinvr.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\UCNC -I.\Drivers\include -I.\Drivers -ID:\Projects\Frezer\Frezer.keil\01020124\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -D__UVISION_VERSION=517 -D_RTE_ -DLPC175x_6x --omf_browse=.\flash\freqinvr.crf Main\FreqInvr.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  FILoadConf PROC
;;;21     
;;;22     void FILoadConf(void){
000000  4770              BX       lr
;;;23     }
;;;24     
                          ENDP

                  FIStop PROC
;;;71     
;;;72     void FIStop(void){
000002  b510              PUSH     {r4,lr}
;;;73     	QClrPin(SPINDEL_FORW);
000004  200f              MOVS     r0,#0xf
000006  f7fffffe          BL       QClrPin
;;;74     	QClrPin(SPINDEL_BACK);
00000a  e8bd4010          POP      {r4,lr}
00000e  200e              MOVS     r0,#0xe
000010  f7ffbffe          B.W      QClrPin
;;;75     }
;;;76     
                          ENDP

                  FIInit PROC
;;;24     
;;;25     void FIInit(void){
000014  b510              PUSH     {r4,lr}
;;;26     
;;;27     //	Msg("FIInit %d\r\n",*pFIType);
;;;28     	TROS_DIR = 1;
000016  4c2a              LDR      r4,|L1.192|
000018  2001              MOVS     r0,#1
00001a  7020              STRB     r0,[r4,#0]
;;;29     	PWM_Init(*pFIPWM);
00001c  6860              LDR      r0,[r4,#4]  ; pFIPWM
00001e  6800              LDR      r0,[r0,#0]
000020  f7fffffe          BL       PWM_Init
;;;30     	if ((*pFIPWMFreq)==0) *pFIPWMFreq = 3000;
000024  68a0              LDR      r0,[r4,#8]  ; pFIPWMFreq
000026  6801              LDR      r1,[r0,#0]
000028  b911              CBNZ     r1,|L1.48|
00002a  f64031b8          MOV      r1,#0xbb8
00002e  6001              STR      r1,[r0,#0]
                  |L1.48|
;;;31     	// старт шима для 27 м/с
;;;32     //	PWM_Set((u32)(611*((*pFIPWM)-1)/(*pFIPWMFreq)));
;;;33     	// пытаемся отключить шпиндель фрезера при инициализации
;;;34     	PWM_Set(0);
000030  2000              MOVS     r0,#0
000032  f7fffffe          BL       PWM_Set
;;;35     	PWM_Start();
000036  f7fffffe          BL       PWM_Start
;;;36     	FIStop();
00003a  e8bd4010          POP      {r4,lr}
00003e  e7fe              B        FIStop
;;;37     }
;;;38     
                          ENDP

                  FIUnlock PROC
;;;39     void FIUnlock(void){
000040  4770              BX       lr
;;;40     //	Msg("FIUnlock %d\r\n",*pFIType);
;;;41     }
;;;42     
                          ENDP

                  FISetFreq PROC
;;;43     void FISetFreq(u16 Freq){
000042  b538              PUSH     {r3-r5,lr}
;;;44     	u32 F2;
;;;45     	Freq*=10;
000044  eb000080          ADD      r0,r0,r0,LSL #2
000048  f64f71ff          MOV      r1,#0xffff
00004c  ea010340          AND      r3,r1,r0,LSL #1
;;;46     	if ((*pFIPWMFreq)==0) *pFIPWMFreq = 3000;
000050  491b              LDR      r1,|L1.192|
000052  6888              LDR      r0,[r1,#8]  ; pFIPWMFreq
000054  6802              LDR      r2,[r0,#0]            ;43
000056  b912              CBNZ     r2,|L1.94|
000058  f64032b8          MOV      r2,#0xbb8
00005c  6002              STR      r2,[r0,#0]
                  |L1.94|
;;;47     	if (Freq < (*pFIPWMFreq))  
00005e  6848              LDR      r0,[r1,#4]  ; pFIPWM
000060  429a              CMP      r2,r3
000062  d905              BLS      |L1.112|
;;;48     	  F2=(u32)(Freq*((*pFIPWM)-1)/(*pFIPWMFreq));  
000064  6800              LDR      r0,[r0,#0]
000066  1e40              SUBS     r0,r0,#1
000068  4358              MULS     r0,r3,r0
00006a  fbb0f4f2          UDIV     r4,r0,r2
00006e  e001              B        |L1.116|
                  |L1.112|
;;;49     	else F2 = (*pFIPWM)-1;
000070  6804              LDR      r4,[r0,#0]
000072  1e64              SUBS     r4,r4,#1
                  |L1.116|
;;;50     	Msg("MR0 %d MR0Freq %d Freq %d F2 %d\r\n",*pFIPWM,*pFIPWMFreq,Freq,F2);
000074  9400              STR      r4,[sp,#0]
000076  6848              LDR      r0,[r1,#4]  ; pFIPWM
000078  6801              LDR      r1,[r0,#0]
00007a  a012              ADR      r0,|L1.196|
00007c  f7fffffe          BL       Msg
;;;51     	PWM_Set(F2);
000080  4620              MOV      r0,r4
000082  f7fffffe          BL       PWM_Set
;;;52     	PWM_Start();
000086  e8bd4038          POP      {r3-r5,lr}
00008a  f7ffbffe          B.W      PWM_Start
;;;53     }
;;;54     
                          ENDP

                  FISetDir PROC
;;;55     void FISetDir(u8 rev){
00008e  490c              LDR      r1,|L1.192|
000090  b108              CBZ      r0,|L1.150|
;;;56     //	Msg("FIDir %d %d\r\n",*pFIType,rev);
;;;57     	if (rev) {
;;;58     		TROS_DIR=0;
000092  2000              MOVS     r0,#0
000094  e000              B        |L1.152|
                  |L1.150|
;;;59     	} else {
;;;60     		// прямое вращение
;;;61     		TROS_DIR=1;
000096  2001              MOVS     r0,#1
                  |L1.152|
000098  7008              STRB     r0,[r1,#0]            ;58
;;;62     	}
;;;63     }
00009a  4770              BX       lr
;;;64     
                          ENDP

                  FIStart PROC
;;;65     void FIStart(void){
00009c  b510              PUSH     {r4,lr}
;;;66     	FIStop();
00009e  f7fffffe          BL       FIStop
;;;67     	if (TROS_DIR)	QSetPin(SPINDEL_FORW);
0000a2  4807              LDR      r0,|L1.192|
0000a4  7800              LDRB     r0,[r0,#0]  ; TROS_DIR
0000a6  b108              CBZ      r0,|L1.172|
0000a8  200f              MOVS     r0,#0xf
0000aa  e000              B        |L1.174|
                  |L1.172|
;;;68     	else			QSetPin(SPINDEL_BACK);
0000ac  200e              MOVS     r0,#0xe
                  |L1.174|
0000ae  f7fffffe          BL       QSetPin
;;;69     	PWM_Start();
0000b2  e8bd4010          POP      {r4,lr}
0000b6  f7ffbffe          B.W      PWM_Start
;;;70     }
;;;71     
                          ENDP

                  FIQuery PROC
;;;76     
;;;77     void FIQuery(void){
0000ba  4770              BX       lr
;;;78     }
;;;79     
                          ENDP

                  FIAnswer PROC
;;;80     void FIAnswer(u8 * buffer,u16 len){
0000bc  4770              BX       lr
;;;81     }
                          ENDP

0000be  0000              DCW      0x0000
                  |L1.192|
                          DCD      ||.data||
                  |L1.196|
0000c4  4d523020          DCB      "MR0 %d MR0Freq %d Freq %d F2 %d\r\n",0
0000c8  2564204d
0000cc  52304672
0000d0  65712025
0000d4  64204672
0000d8  65712025
0000dc  64204632
0000e0  2025640d
0000e4  0a00    
0000e6  00                DCB      0
0000e7  00                DCB      0

                          AREA ||.data||, DATA, ALIGN=2

                  TROS_DIR
000000  00000000          DCB      0x00,0x00,0x00,0x00
                  pFIPWM
                          DCD      0x00000000
                  pFIPWMFreq
                          DCD      0x00000000

;*** Start embedded assembler ***

#line 1 "Main\\FreqInvr.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___10_FreqInvr_c_3b4cb59b____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___10_FreqInvr_c_3b4cb59b____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___10_FreqInvr_c_3b4cb59b____REVSH|
#line 462
|__asm___10_FreqInvr_c_3b4cb59b____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___10_FreqInvr_c_3b4cb59b____RRX|
#line 649
|__asm___10_FreqInvr_c_3b4cb59b____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
