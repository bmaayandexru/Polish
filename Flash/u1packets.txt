; generated by Component: ARM Compiler 5.06 update 1 (build 61) Tool: ArmCC [4d35ad]
; commandline ArmCC [--list --debug -c --asm --interleave -o.\flash\u1packets.o --asm_dir=.\Flash\ --list_dir=.\Flash\ --depend=.\flash\u1packets.d --cpu=Cortex-M3 --apcs=interwork -O3 --diag_suppress=9931 -I.\UCNC -I.\Drivers\include -I.\Drivers -ID:\Projects\Frezer\Frezer.keil\01020124\RTE -IC:\Keil_v5\ARM\PACK\ARM\CMSIS\5.0.1\CMSIS\Include -IC:\Keil_v5\ARM\PACK\Keil\LPC1700_DFP\2.3.0\Device\Include -D__UVISION_VERSION=517 -D_RTE_ -DLPC175x_6x --omf_browse=.\flash\u1packets.crf Main\u1packets.c]
                          THUMB

                          AREA ||.text||, CODE, READONLY, ALIGN=2

                  mbFrzPackHandler1 PROC
;;;7      
;;;8      void mbFrzPackHandler1(u8 * buffer,u16 len){
000000  4b0f              LDR      r3,|L1.64|
;;;9      	WaitFlag = 1;
000002  2201              MOVS     r2,#1
000004  701a              STRB     r2,[r3,#0]
;;;10     //	Msg("WaitFlag %d \r\n",WaitFlag);
;;;11     	// зафиксировать буфер квитанции в очереди
;;;12     	quFixAnswer(buffer,len);
000006  f7ffbffe          B.W      quFixAnswer
;;;13     }
;;;14     
                          ENDP

                  UART1_Thread PROC
;;;16     
;;;17     void	UART1_Thread(void){
00000a  b510              PUSH     {r4,lr}
;;;18     	u16 Count;
;;;19     	Count=UARTx_ReadyRecvData(1);
00000c  2001              MOVS     r0,#1
00000e  f7fffffe          BL       UARTx_ReadyRecvData
000012  0004              MOVS     r4,r0
;;;20     //	TITimer(tiTest2,tiMsToTick(1000), Msg("u"));
;;;21     	if (Count) {
000014  d00c              BEQ      |L1.48|
;;;22     		//Msg("%d ",Count);
;;;23     		// данные есть
;;;24     //		if (UARTx_RecvBuffer(1,buffer1,Count)){
;;;25     		if (UART1_RecvBuffer(buffer1,Count)){
000016  4601              MOV      r1,r0
000018  480a              LDR      r0,|L1.68|
00001a  f7fffffe          BL       UART1_RecvBuffer
00001e  2800              CMP      r0,#0
000020  d00d              BEQ      |L1.62|
;;;26     			//Msg("%2X",buffer1[0]);
;;;27     //			// принимаем и отправляем на обработку
;;;28     			mbRecvBuffer(1,buffer1,Count);
000022  4622              MOV      r2,r4
000024  e8bd4010          POP      {r4,lr}
000028  4906              LDR      r1,|L1.68|
00002a  2001              MOVS     r0,#1
00002c  f7ffbffe          B.W      mbRecvBuffer
                  |L1.48|
;;;29     		} 
;;;30     	} else {
;;;31     		mbIdle(1);
000030  2001              MOVS     r0,#1
000032  f7fffffe          BL       mbIdle
;;;32     		WaitAndFreeUartLine();
000036  e8bd4010          POP      {r4,lr}
00003a  f7ffbffe          B.W      WaitAndFreeUartLine
                  |L1.62|
;;;33     	}
;;;34     }
00003e  bd10              POP      {r4,pc}
;;;35     
                          ENDP

                  |L1.64|
                          DCD      WaitFlag
                  |L1.68|
                          DCD      ||.bss||

                          AREA ||.bss||, DATA, NOINIT, ALIGN=0

                  buffer1
                          %        255

;*** Start embedded assembler ***

#line 1 "Main\\u1packets.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___11_u1packets_c_c6f7a7ee____REV16|
#line 447 "C:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.0.1\\CMSIS\\Include\\cmsis_armcc.h"
|__asm___11_u1packets_c_c6f7a7ee____REV16| PROC
#line 448

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___11_u1packets_c_c6f7a7ee____REVSH|
#line 462
|__asm___11_u1packets_c_c6f7a7ee____REVSH| PROC
#line 463

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___11_u1packets_c_c6f7a7ee____RRX|
#line 649
|__asm___11_u1packets_c_c6f7a7ee____RRX| PROC
#line 650

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
